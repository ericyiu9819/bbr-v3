#!/bin/bash

# 定义网络接口和带宽（根据实际需求修改）
NET_INTERFACE="eth0"  # 替换为您的网络接口名，使用 `ip link` 查看
BANDWIDTH="100Mbit"   # 替换为您的实际带宽，例如 "50Mbit" 或 "1Gbit"

# 检查是否以 root 权限运行
if [ "$EUID" -ne 0 ]; then
    echo "请以 root 权限运行此脚本（使用 sudo）"
    exit 1
fi

# 更新软件包列表并安装必要工具
echo "正在更新系统并安装必要工具..."
apt update && apt install -y iproute2 linux-generic-hwe-22.04

# 检查当前内核版本
CURRENT_KERNEL=$(uname -r | cut -d'.' -f1-2)
if [ "$(echo $CURRENT_KERNEL | awk '{print ($1 >= 5 && $2 >= 4)}')" -ne 1 ]; then
    echo "当前内核版本 ($CURRENT_KERNEL) 过低，正在安装最新内核..."
    apt install -y linux-generic-hwe-22.04
    update-grub
else
    echo "当前内核版本 ($CURRENT_KERNEL) 已满足要求，跳过内核更新。"
fi

# 配置 BBR
echo "配置 BBR 拥塞控制..."
cat << EOF >> /etc/sysctl.conf
net.core.default_qdisc=fq
net.ipv4.tcp_congestion_control=bbr
EOF
sysctl -p

# 验证 BBR 是否可用
if sysctl net.ipv4.tcp_congestion_control | grep -q "bbr"; then
    echo "BBR 已成功启用。"
else
    echo "BBR 启用失败，请检查内核版本或配置。"
    exit 1
fi

# 检查并加载 Cake 模块
echo "检查并启用 Cake 队列管理..."
modprobe sch_cake
if lsmod | grep -q "sch_cake"; then
    echo "Cake 模块已加载。"
else
    echo "Cake 模块加载失败，可能是内核不支持，请检查内核版本。"
    exit 1
fi

# 配置 Cake
echo "为接口 $NET_INTERFACE 配置 Cake，带宽设置为 $BANDWIDTH..."
tc qdisc add dev "$NET_INTERFACE" root cake bandwidth "$BANDWIDTH"

# 创建持久化脚本
echo "设置 Cake 配置在重启后生效..."
cat << EOF > /etc/network/if-pre-up.d/cake
#!/bin/sh
tc qdisc add dev $NET_INTERFACE root cake bandwidth $BANDWIDTH
EOF
chmod +x /etc/network/if-pre-up.d/cake

# 验证配置
echo "验证当前配置..."
tc qdisc show dev "$NET_INTERFACE"

echo "安装和配置完成！建议重启系统以应用新内核（运行 'reboot'）。"
echo "重启后可使用 'ss -ti' 检查 BBR 和 'tc qdisc show' 检查 Cake 是否生效。"
